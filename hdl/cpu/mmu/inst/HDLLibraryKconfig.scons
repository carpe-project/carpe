# -*- python -*-

Import('kconfig')
Import('project')
Import('hdllibrary')

mmu_inst_impls = [
    ('pass', 'No translation', None),
    ]
mmu_inst_impl_default = 'pass'

mmu_inst_choice = kconfig.Choice(prompt = '"Instruction Memory Management Unit Type"',
                            default = 'proj.%s.hdl.lib.%s.mmu.inst.impl.%s' % (project, hdllibrary, mmu_inst_impl_default),
                            )

for symbol, prompt, config_menu_title in mmu_inst_impls:
    mmu_inst_choice.Config('proj.%s.hdl.lib.%s.mmu.inst.impl.%s' % (project, hdllibrary, symbol),
                             prompt = '"%s"' % prompt,
                             )
    if config_menu_title is not None:
        config_menu = kconfig.Menu('%s Configuration' % config_menu_title,
                                   depends_on = 'proj.%s.hdl.lib.%s.mmu.inst.impl.%s' % (project, hdllibrary, symbol),
                                   )
        SConscript('%s/HDLLibraryKconfig.scons' % symbol,
                   exports = {'kconfig'    : config_menu,
                              'project'    : project,
                              'hdllibrary' : hdllibrary,
                              },
                   variantdir = symbol,
                   duplicate = 0,
                   )

kconfig.Config('proj.%s.hdl.lib.%s.mmu.inst.impl' % (project, hdllibrary),
               type = 'string',
               default = ['"%s" if proj.%s.hdl.lib.%s.mmu.inst.impl.%s' % (mmu_inst_impl[0], project, hdllibrary, mmu_inst_impl[0])
                          for mmu_inst_impl in mmu_inst_impls],
               )
